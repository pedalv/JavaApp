[{"D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\index.tsx":"1","D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\reportWebVitals.ts":"2","D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\App.tsx":"3","D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\Heading.tsx":"4","D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\Counter.tsx":"5","D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\Button.tsx":"6","D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\StarMatch.tsx":"7","D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\utils.tsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1973,"mtime":1612430960000,"results":"12","hashOfConfig":"10"},{"size":394,"mtime":1612349585424,"results":"13","hashOfConfig":"10"},{"size":1335,"mtime":1612271792393,"results":"14","hashOfConfig":"10"},{"size":419,"mtime":1612428644412,"results":"15","hashOfConfig":"10"},{"size":1998,"mtime":1612432124865,"results":"16","hashOfConfig":"10"},{"size":1187,"mtime":1612432237370,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"pwe9xp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\index.tsx",[],["37","38"],"D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\reportWebVitals.ts",[],"D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\App.tsx",[],"D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\Heading.tsx",[],"D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\Counter.tsx",["39"],"import React from \"react\";\n\n//Use PropTypes or TypeScript\nexport type CounterProps = {\n  label?: string;\n  count: number;\n  onCounterIncrease: (isShift: boolean) => void;\n};\n\nconst Counter = ({\n                     label = \"Count\",\n                     count,\n                     onCounterIncrease\n                 } : CounterProps) => {\n\n    const handlerClick = (event: React.MouseEvent<HTMLElement>) => {\n        onCounterIncrease(event.shiftKey);\n    };\n\n    return (\n        <div>\n            <label htmlFor=\"counter\" aria-label={label}>{label}</label>\n            <span id=\"counter\" role=\"counter\" onClick={handlerClick} >\n          {count}\n        </span>\n        </div>\n    );\n};\n\n/*\nclass Counter extends Component<CounterProps, CounterSate> {\n  readonly state: CounterSate = initialState;\n\n  componentDidMount() {\n      if(this.props.start) {\n          this.setState({\n              count : this.props.start\n          })\n      }\n  }\n\n  render() {\n    //this.state.count = 99; Attempt to assign to const or readonly variable\n\n    const { label = \"Count\" } = this.props;\n\n    return (\n      <div>\n        <label htmlFor=\"counter\" aria-label={label}>\n          {label}\n        </label>\n        <span id=\"counter\" role=\"counter\">\n          {this.state.count}\n        </span>\n      </div>\n    );\n  }\n}\n*/\n\nexport default Counter;","D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\Button.tsx",["40"],"D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\StarMatch.tsx",["41"],"import React, {useState} from 'react';\nimport './starmatch.css';\nimport utils from './utils';\n\n// STAR MATCH - Starting Template\n\nconst StarMatch = () => {\n    const [stars, setStars] = useState(utils.random(1, 9));\n    return (\n        <div className=\"game\">\n            <div className=\"help\">\n                Pick 1 or more numbers that sum to the number of stars\n            </div>\n            <div className=\"body\">\n                <div className=\"left\">\n                    {utils.range(1, stars).map(starId =>\n                        <div key={starId} className=\"star\" />\n                    )}\n                    {/*\n                    <div className=\"star\" />\n                    <div className=\"star\" />\n                    <div className=\"star\" />\n                    <div className=\"star\" />\n                    <div className=\"star\" />\n                    <div className=\"star\" />\n                    <div className=\"star\" />\n                    <div className=\"star\" />\n                    <div className=\"star\" />\n                    */}\n                </div>\n                <div className=\"right\">\n                    {utils.range(1, 9).map(number =>\n                        <button key={number} className=\"number\">{number}</button>\n                    )}\n                    {/*\n                    <button className=\"number\">1</button>\n                    <button className=\"number\">2</button>\n                    <button className=\"number\">3</button>\n                    <button className=\"number\">4</button>\n                    <button className=\"number\">5</button>\n                    <button className=\"number\">6</button>\n                    <button className=\"number\">7</button>\n                    <button className=\"number\">8</button>\n                    <button className=\"number\">9</button>\n                    */}\n                </div>\n            </div>\n            <div className=\"timer\">Time Remaining: 10</div>\n        </div>\n    );\n};\n\nexport default StarMatch;","D:\\Workspace\\JavaApp\\MellomOppdrag\\eksempel-app\\src\\main\\webappuicomponent\\my-app\\src\\utils.tsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":23,"column":32,"nodeType":"48","endLine":23,"endColumn":46},{"ruleId":"49","severity":1,"message":"50","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"49","severity":1,"message":"53","line":8,"column":19,"nodeType":"51","messageId":"52","endLine":8,"endColumn":27},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setStars' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]