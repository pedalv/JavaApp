/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id "org.springframework.boot" version "2.3.4.RELEASE"
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'maven-publish'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri('http://repo.maven.apache.org/maven2')
    }
    jcenter()
    google()
}

dependencies {

    implementation 'net.minidev:json-smart:2.3'

    //https://www.miguoliang.com/how-to-use-slf4j-annotation-in-java.html
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    //compileOnly 'org.slf4j:slf4j-simple:1.7.30'
    //annotationProcessor 'org.slf4j:slf4j-simple:1.7.30'
    //testCompileOnly 'org.slf4j:slf4j-simple:1.7.30'
    //testAnnotationProcessor 'org.slf4j:slf4j-simple:1.7.30'
    //implementation 'org.slf4j:slf4j-simple:1.7.30'

    implementation 'org.springframework.boot:spring-boot-starter-validation:2.3.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.3.3.RELEASE'
    /*
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:2.3.3.RELEASE"){
        exclude module: "logback-classic"
    }
    */
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest:2.3.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.3.RELEASE'
    implementation 'org.springframework.data:spring-data-gemfire:2.3.3.RELEASE'
    implementation 'org.apache.kafka:kafka-streams:2.6.0'
    implementation 'org.springframework.kafka:spring-kafka:2.5.5.RELEASE'
    implementation 'org.apache.kafka:kafka-clients:2.6.0'
    implementation 'org.scala-lang:scala-library:2.13.2'
    implementation 'org.projectlombok:lombok:1.18.12'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.3.RELEASE'
    /*
    compile("org.springframework.boot:spring-boot-starter-security:2.3.3.RELEASE"){
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
    */
    implementation 'org.bouncycastle:bcprov-jdk15on:1.66'
    implementation 'org.springframework.ldap:spring-ldap-core:2.3.3.RELEASE'
    implementation 'org.springframework.security:spring-security-ldap:5.3.4.RELEASE'
    implementation 'com.unboundid:unboundid-ldapsdk:4.0.14'
    implementation 'org.springframework.security:spring-security-oauth2-client:5.4.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    runtimeOnly 'com.h2database:h2:1.4.200'
    runtimeOnly 'org.springframework.shell:spring-shell:1.2.0.RELEASE'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.3.3.RELEASE'
    testImplementation 'org.springframework.kafka:spring-kafka-test:2.5.5.RELEASE'
    testImplementation 'org.apache.kafka:kafka-streams-test-utils:2.6.0'
    testImplementation 'org.springframework.security:spring-security-test:5.3.4.RELEASE'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-ldap:2.3.3.RELEASE'
    //testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'junit:junit:4.13'
}

group = 'no.agitec.fagaften'
version = '0.0.1-SNAPSHOT'
description = 'eksempel-app'
sourceCompatibility = '11'


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
