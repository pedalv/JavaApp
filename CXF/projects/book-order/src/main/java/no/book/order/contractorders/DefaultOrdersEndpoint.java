package no.book.order.contractorders;

import javax.jws.WebService;

//import javax.jws.soap.SOAPBinding;
//import javax.xml.bind.annotation.XmlSeeAlso;

import org.springframework.beans.factory.annotation.Autowired;

//import com.bookcontract.schema.order.AccountType;
//import com.bookcontract.schema.order.ObjectFactory;

import com.bookcontract.schema.order.OrderInquiryResponseType;
import com.bookcontract.schema.order.OrderInquiryType;
import com.bookcontract.service.orders.Orders;



/**
 * This is the default implementation of the Orders interface generated by the
 * Maven CXF code-gen plugin. The class is annotated with the JAX-WS web service
 * annotation. The values for the port name and service name come from the
 * service and port WSDL elements. The endpoint interface value is the fully
 * qualified name for the Orders interface.
 */
@WebService(portName = "OrdersSOAP", 
		serviceName = "Orders",
		endpointInterface = "com.bookcontract.service.orders.Orders",
		targetNamespace = "http://www.bookcontract.com/service/Orders/")
public class DefaultOrdersEndpoint implements Orders {

	// Autowire allows Spring to inject the order service containing core
	// business logic.
	@Autowired
	private OrderService orderService;
	
	@Override
	public OrderInquiryResponseType processOrderPlacement(
			OrderInquiryType orderInquiry) {
		
		//return null;
		/*
		ObjectFactory factory = new ObjectFactory();
		OrderInquiryResponseType response = factory
				.createOrderInquiryResponseType();
		AccountType account = factory.createAccountType();
		account.setAccountId(1);
		response.setAccount(account);
		return response;*/
		
		// This method is the implementation for processing an order. It is
	    // responsible for processing the message. At this time, it just routes
	    // the call to our business logic service to complete the task.
	    OrderInquiryResponseType response = orderService.processOrder(
				orderInquiry.getUniqueOrderId(),
				orderInquiry.getOrderQuantity(),
				orderInquiry.getAccountId(),
				orderInquiry.getEan13());
		
		return  response;	
	}

}